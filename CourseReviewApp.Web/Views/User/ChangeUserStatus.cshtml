@model CourseReviewApp.Web.ViewModels.ChangeUserStatusVm
@{
    ViewData["Title"] = ViewBag.Title;
}

<div class="container">
    <div class="row d-flex justify-content-center mt-4">
        <div class="card bg-light p-3 col-12 col-sm-11 col-md-10 col-lg-8 col-xl-7">
            <h1 class="font-weight-light text-center">@ViewData["Title"]</h1>
            <hr />
            <h3 class="font-weight-light mb-3">User</h3>
            <dl class="row">
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.FullName)
                </dt>
                <dd class="col-8 col-sm-9">
                    @Html.DisplayFor(model => model.FullName)
                </dd>
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.UserName)
                </dt>
                <dd class="col-8 col-sm-9">
                    @Html.DisplayFor(model => model.UserName)
                </dd>
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-8 col-sm-9">
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.RegistrationDate)
                </dt>
                <dd class="col-8 col-sm-9">
                    @Model.RegistrationDate.ToString("dd.MM.yyyy hh:mm")
                </dd>
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.Roles)
                </dt>
                <dd class="col-8 col-sm-9">
                    @foreach (var role in Model.Roles)
                    {
                        <span>@role.Replace('_', ' '),</span>
                    }
                </dd>
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.IsActive)
                </dt>
                <dd class="col-8 col-sm-9">
                    @(Model.IsActive ? "Active" : "Blocked")
                </dd>
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.IsLockedOut)
                </dt>
                <dd class="col-8 col-sm-9">
                    @(Model.IsLockedOut ? "Yes" : "No")
                </dd>
                <dt class="col-4 col-sm-3">
                    @Html.DisplayNameFor(model => model.LockoutEnd)
                </dt>
                <dd class="col-8 col-sm-9">
                    @(Model.LockoutEnd.HasValue ? Model.LockoutEnd.Value.ToLocalTime().ToString("dd.MM.yyyy HH:mm:ss"): string.Empty)
                </dd>
            </dl>
            <form asp-action="@ViewBag.Action">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input asp-for="Id" type="hidden" class="form-control" />
                    <input asp-for="UserName" type="hidden" class="form-control" />
                    <input asp-for="Email" type="hidden" class="form-control" />
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input type="hidden" class="form-check-input" asp-for="IsActive" />
                    </label>
                </div>
                <div class="form-group row d-flex justify-content-center mt-5">
                    <button class="btn btn-success mr-3"><i class="fas fa-check shadow mr-2"></i><span>Confirm</span></button>
                    <button type="button" class="btn btn-danger btn-back shadow"><i class="fas fa-times mr-2"></i><span>Cancel</span></button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
