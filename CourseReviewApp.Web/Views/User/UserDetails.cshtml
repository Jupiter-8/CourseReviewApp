@model CourseReviewApp.Web.ViewModels.UserVm

@{
    ViewData["Title"] = "User details";
}

<div class="container">
    <div class="row d-flex justify-content-center my-4">
        <div class="card bg-light p-3 col-12 col-sm-11 col-md-10 col-lg-8 col-xl-7">
            <h1 class="font-weight-light text-center">@ViewData["Title"]</h1>
            <hr />
            <h3 class="font-weight-light mb-3">User</h3>
            <dl class="row">
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>
                <dd class="col-7 col-sm-7">
                    @Html.DisplayFor(model => model.FirstName)
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>
                <dd class="col-7 col-sm-7">
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.Username)
                </dt>
                <dd class="col-7 col-sm-7">
                    @Html.DisplayFor(model => model.Username)
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-7 col-sm-7">
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.EmailConfirmed)
                </dt>
                <dd class="col-7 col-sm-7">
                    @(Model.EmailConfirmed ? "Yes" : "No")
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.RegistrationDate)
                </dt>
                <dd class="col-7 col-sm-7">
                    @Model.RegistrationDate.ToString("dd.MM.yyyy HH:mm:ss")
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.LastLoginDate)
                </dt>
                <dd class="col-7 col-sm-7">
                    @(Model.LastLoginDate.HasValue ? Model.LastLoginDate.Value.ToString("dd.MM.yyyy HH:mm:ss") : "Never logged in")
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.IsActive)
                </dt>
                <dd class="col-7 col-sm-7">
                    @(Model.IsActive ? "Yes" : "No")
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.LockoutEnd)
                </dt>
                <dd class="col-7 col-sm-7">
                    @(Model.LockoutEnd.HasValue && Model.LockoutEnd.Value >= DateTimeOffset.Now
                        ? Model.LockoutEnd.Value.ToString("dd.MM.yyyy HH:mm:ss"): "Not locked out")
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </dt>
                <dd class="col-7 col-sm-7">
                    @(!string.IsNullOrEmpty(Model.PhoneNumber) ? Model.PhoneNumber : "Not provided")
                </dd>
                <dt class="col-5 col-sm-5">
                    @Html.DisplayNameFor(model => model.Roles)
                </dt>
                <dd class="col-7 col-sm-7">
                    @foreach (var role in Model.Roles)
                    {
                        <span>@role.Replace('_', ' '),</span>
                    }
                </dd>
                @if (Model.Roles.Contains("Course_client"))
                {
                    <dt class="col-5 col-sm-5">
                        @Html.DisplayNameFor(model => model.ReviewsCount)
                    </dt>
                    <dd class="col-7 col-sm-7">
                        @Html.DisplayFor(model => model.ReviewsCount)
                    </dd>
                    <dt class="col-5 col-sm-5">
                        @Html.DisplayNameFor(model => model.UserWasHelpfullCount)
                    </dt>
                    <dd class="col-7 col-sm-7">
                        @Html.DisplayFor(model => model.UserWasHelpfullCount)
                    </dd>
                }
                else if (Model.Roles.Contains("Course_owner"))
                {
                    <dt class="col-5 col-sm-5">
                        @Html.DisplayNameFor(model => model.AvgCoursesRating)
                    </dt>
                    <dd class="col-7 col-sm-7">
                        @Model.AvgCoursesRating.ToString("0.00")
                    </dd>
                    <dt class="col-5 col-sm-5">
                        @Html.DisplayNameFor(model => model.CoursesReviewsCount)
                    </dt>
                    <dd class="col-7 col-sm-7">
                        @Html.DisplayFor(model => model.CoursesReviewsCount)
                    </dd>
                }
                <dt class="col-5 col-sm-5">
                    User avatar:
                </dt>
                <dd class="col-4 col-sm-4 col-md-3 col-lg-2 mt-3">
                    <img class="user-details-img" src="~/Images/Avatars/@Model.AvatarPath" />
                </dd>
            </dl>
            <div class="form-group row d-flex justify-content-center mt-5">
                <button type="button" class="btn btn-success btn-back shadow"><i class="fas fa-chevron-left mr-2"></i><span>Back</span></button>
            </div>
        </div>
    </div>
</div>

